services:
  app:
    build: .
    container_name: backend-app
    ports:
      - "8080:8080"
    env_file:
      - .env
    # Ensures the database started before app connection request
    depends_on:
      - db
      - redis
    restart: unless-stopped

  #MySQL database container.
  db:
    image: mysql:8.0
    container_name: db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      # Persists database data even if the container is removed.
      - db_data:/var/lib/mysql
    restart: unless-stopped

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Prometheus Service for Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./devops/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  #Grafana Service for Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped

# This defines the named volume used by the 'db' service for data persistence.
volumes:
  db_data: